name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: 18
  PNPM_VERSION: 10

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile
      
      - run: |
          pnpm run type-check
          pnpm run lint
          pnpm run build

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/

  quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint:ci
      - run: pnpm audit --audit-level moderate || true

  preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/

      - uses: actions/github-script@v7
        with:
          script: |
            const body = `🚀 Build successful! Ready for review.
            
            📦 Build artifacts available  
            🔗 Commit: ${context.sha.substring(0, 7)}  
            ⏰ Built: ${new Date().toISOString()}`;
            
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existing = comments.find(c => 
              c.user.type === 'Bot' && c.body.includes('🚀 Build successful!')
            );
            
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/

      - run: |
          echo "🚀 Deploying to production..."
          echo "📊 Size: $(du -sh dist/ | cut -f1)"
          
          # Add deployment commands:
          # aws s3 sync dist/ s3://bucket --delete
          # vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
          # netlify deploy --prod --dir=dist --auth=${{ secrets.NETLIFY_TOKEN }}


